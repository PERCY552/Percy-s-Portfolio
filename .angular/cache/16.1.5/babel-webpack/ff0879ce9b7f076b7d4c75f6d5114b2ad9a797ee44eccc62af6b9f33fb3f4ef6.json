{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class ClickOutsideDirective {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n    this.clickOutside = new EventEmitter();\n  }\n  onClick(event, targetElement) {\n    if (!targetElement) {\n      return;\n    }\n    const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.clickOutside.emit(event);\n    }\n  }\n}\nClickOutsideDirective.ɵfac = function ClickOutsideDirective_Factory(t) {\n  return new (t || ClickOutsideDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nClickOutsideDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: ClickOutsideDirective,\n  selectors: [[\"\", \"clickOutside\", \"\"]],\n  hostBindings: function ClickOutsideDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function ClickOutsideDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event, $event.target);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  outputs: {\n    clickOutside: \"clickOutside\"\n  },\n  standalone: true\n});","map":{"version":3,"names":["EventEmitter","ClickOutsideDirective","constructor","_elementRef","clickOutside","onClick","event","targetElement","clickedInside","nativeElement","contains","emit","i0","ɵɵdirectiveInject","ElementRef","selectors","hostBindings","ClickOutsideDirective_HostBindings","rf","ctx","$event","target","ɵɵresolveDocument"],"sources":["C:\\Users\\molok\\Videos\\PERCY RAKGOALE'S PORTFOLIO\\src\\app\\directives\\click-outside.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]',\n  standalone: true\n})\nexport class ClickOutsideDirective {\n\n  @Output()\n  public clickOutside = new EventEmitter<MouseEvent>();\n\n  constructor(private _elementRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n    const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.clickOutside.emit(event);\n    }\n  }\n}\n"],"mappings":"AAAA,SAAwCA,YAAY,QAAsB,eAAe;;AAMzF,OAAM,MAAOC,qBAAqB;EAKhCC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAFxB,KAAAC,YAAY,GAAG,IAAIJ,YAAY,EAAc;EAGpD;EAGOK,OAAOA,CAACC,KAAiB,EAAEC,aAA0B;IAC1D,IAAI,CAACA,aAAa,EAAE;MAClB;;IAEF,MAAMC,aAAa,GAAG,IAAI,CAACL,WAAW,CAACM,aAAa,CAACC,QAAQ,CAACH,aAAa,CAAC;IAC5E,IAAI,CAACC,aAAa,EAAE;MAClB,IAAI,CAACJ,YAAY,CAACO,IAAI,CAACL,KAAK,CAAC;;EAEjC;;AAjBWL,qBAAqB,C;mBAArBA,qBAAqB,EAAAW,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;AAArBb,qBAAqB,C;QAArBA,qBAAqB;EAAAc,SAAA;EAAAC,YAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;eAArBC,GAAA,CAAAd,OAAA,CAAAe,MAAA,EAAAA,MAAA,CAAAC,MAAA,CAET;MAAA,UAAAT,EAAA,CAAAU,iBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}